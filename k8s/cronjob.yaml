apiVersion: batch/v1
kind: CronJob
metadata:
  name: fox-auditoria-sync
  namespace: fox-auditoria
  labels:
    app: fox-auditoria
    component: sync-job
spec:
  # Executar a cada 5 minutos
  schedule: "*/5 * * * *"
  
  # Configura√ß√µes do CronJob
  concurrencyPolicy: Forbid  # N√£o permitir execu√ß√µes simult√¢neas
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  startingDeadlineSeconds: 300  # 5 minutos para iniciar
  
  jobTemplate:
    spec:
      # Configura√ß√µes do Job
      backoffLimit: 2  # M√°ximo 2 tentativas
      activeDeadlineSeconds: 240  # Timeout de 4 minutos
      
      template:
        metadata:
          labels:
            app: fox-auditoria
            component: sync-job
        spec:
          restartPolicy: Never
          
          containers:
          - name: fox-auditoria-sync
            image: structor01/fox-auditoria:latest
            imagePullPolicy: Always
            
            # Comando para executar sincroniza√ß√£o
            command: ["/bin/bash"]
            args:
              - -c
              - |
                echo "üöÄ Iniciando sincroniza√ß√£o FOX Auditoria..."
                echo "‚è∞ $(date): Job iniciado"
                
                # Instalar depend√™ncias se necess√°rio
                pip install --quiet pymongo pandas plotly streamlit
                
                # Executar script de sincroniza√ß√£o
                python3 /app/scripts/sync_job.py
                
                echo "‚úÖ $(date): Job conclu√≠do"
            
            # Vari√°veis de ambiente
            env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongodb-uri
            - name: PYTHONPATH
              value: "/app"
            - name: STREAMLIT_SERVER_HEADLESS
              value: "true"
            
            # Recursos
            resources:
              requests:
                memory: "256Mi"
                cpu: "100m"
              limits:
                memory: "512Mi"
                cpu: "500m"
            
            # Health checks n√£o s√£o necess√°rios para jobs
            
          # Configura√ß√µes do Pod
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            fsGroup: 1000
          
          # Toler√¢ncias para execu√ß√£o em qualquer node
          tolerations:
          - key: "node-role.kubernetes.io/master"
            operator: "Exists"
            effect: "NoSchedule"

